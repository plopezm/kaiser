### Instrospection (Types)
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": null,
    "variables": {},
    "query": "{\n  __schema {\n    types {\n      name\n      description\n      fields {\n        name\n        description\n      }\n    }\n  }\n}\n"
}

### Instrospection (Queries)
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": null,
    "variables": {},
    "query": "{\n  __schema {\n    queryType {\n      name\n      description\n      fields {\n        name\n        description\n        params {\n          name\n          description\n        }\n      }\n    }\n  }\n}\n"
}

### Introspection (Mutations)
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": null,
    "variables": {},
    "query": "{\n  __schema {\n    mutationType {\n      name\n      description\n      fields {\n        name\n        description\n        params {\n          name\n          description\n        }\n      }\n    }\n  }\n}\n"
}

### Get Jobs
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": "jobQuery",
    "variables": {},
    "query": "query jobQuery {  jobs { version name params { name value } status hash activation { type duration } entrypoint  __typename } }"
}

### Get Job by Name
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": "jobQuery",
    "variables": {},
    "query": "query jobQuery { getJobById(jobName: \"weatherChecker\") { version name params { name value } status hash activation { type duration } entrypoint  __typename }}"
}

### Create a new Job
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": "jobMutation",
    "variables": {
        "job": {
            "version": "1",
            "name": "testing1",
            "entrypoint": "initial",
            "activation": {
                "type": "remote"
            },
            "params": [
                {
                    "name": "hello"
                }
            ],
            "tasks": [
                {
                    "name": "initial",
                    "onSuccess": "",
                    "onFailure": "",
                    "script": "logger.info(hello);"
                }
            ]
        }
    },
    "query": "mutation jobMutation($job: CreateJobType!) { createJob(input: $job) { name  __typename }}"
}

### Create Job with multiple tasks
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": "jobMutation",
    "variables": {
        "job": {
            "version": "1",
            "name": "testing2",
            "entrypoint": "printA",
            "activation": {
                "type": "local",
                "duration": "PT30S"
            },
            "params": [
                {
                    "name": "a",
                    "value": "a"
                },
                {
                    "name": "b",
                    "value": "b"
                }
            ],
            "tasks": [
                {
                    "name": "printB",
                    "onSuccess": "",
                    "onFailure": "",
                    "script": "logger.info(b);"
                },
                {
                    "name": "printA",
                    "onSuccess": "printB",
                    "onFailure": "printB",
                    "script": "logger.info(a);"
                }
            ]
        }
    },
    "query": "mutation jobMutation($job: CreateJobType!) { createJob(input: $job) { name  __typename }}"
}

### Create Job with multiple tasks
POST http://localhost:8080/graphql HTTP/1.1
content-type: application/json

{
    "operationName": "jobMutation",
    "variables": {
        "jobName": "testing1",
        "params": [
            {
                "name": "hello",
                "value": "Executed from internet"
            }
        ]
    },
    "query": "mutation jobMutation($jobName: String!, $params: [jobArgTypeInput]!) { executeJob(jobName: $jobName, params: $params) { name status __typename }}"
}
